!function(r){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.findMissing=r()}}(function(){return function r(e,n,o){function i(f,u){if(!n[f]){if(!e[f]){var d="function"==typeof require&&require;if(!u&&d)return d(f,!0);if(t)return t(f,!0);var s=new Error("Cannot find module '"+f+"'");throw s.code="MODULE_NOT_FOUND",s}var a=n[f]={exports:{}};e[f][0].call(a.exports,function(r){var n=e[f][1][r];return i(n?n:r)},a,a.exports,r,e,n,o)}return n[f].exports}for(var t="function"==typeof require&&require,f=0;f<o.length;f++)i(o[f]);return i}({"find-missing":[function(r,e,n){"use strict";function o(r,e,n){if("number"!=typeof r)throw Error("from should be number!");if("number"!=typeof e)throw Error("to should be number!");if(r>e)throw Error("from could not be bigger then to!");if(!Array.isArray(n))throw Error("all should be an array!")}e.exports=function(r,e,n){o(r,e,n);var i=function(r){return~n.indexOf(r)},t=function(r){return r.find(function(r){return!i(r)})},f=Math.round((e-r+1)/2),u=r+f-1;if(!i(f))return f;for(;e>u;++r,--e){var d=t([r,e]);if(d)return d}}},{}]},{},["find-missing"])("find-missing")});
